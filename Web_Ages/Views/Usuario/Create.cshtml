@model Model.tb_usuario
@{Layout = "~/Views/Shared/_Layout.cshtml";}

<div class="small-nav">
    <div>
        <a href="#">
            @Html.ActionLink("Página Inicial", "Index", "Home")
            <span>&gt;</span>
            @Html.ActionLink("Usuário", "Index", "Usuario")
            <span>&gt;</span>
            Cadastrar
        </a>
    </div>
</div>
<div class="msg msg-ok">
    <p><strong>Você está cadastrando um novo usuário!</strong></p>
</div>
<hr />
@if (HttpContext.Current.User.Identity.IsAuthenticated)
 {
      using (Html.BeginForm()) 
        {
         Html.AntiForgeryToken();
         <div class="form-horizontal">
            
          
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
             <div class="form-group">
                 @Html.LabelFor(model => model.email, "E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                 </div>
             </div>
            <div class="form-group">
                @Html.LabelFor(model => model.nome,"Usuário", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.senha, "Senha", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" type="password">
                    @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.id_funcao, "Função", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("id_funcao",null , htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_funcao, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.perfil, "Nome da Função", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.perfil, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.perfil, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.sobrenome, "Sobrenome", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sobrenome, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Confirmar" class="btn btn-block" />
                </div>
            </div>
        </div><br><br><br>
        }
 }
   
